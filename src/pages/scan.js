import React, { useState, useRef } from "react";
import { QrReader } from "react-qr-reader";
import { useRouter } from "next/router";
import Head from "next/head";
import Link from "next/link";
import axios from "axios";

export default function Scan() {
  const router = useRouter();
  const [data, setData] = useState("No result");
  const [message, setMessage] = useState("Checking...");
  const [showModal, setShowModal] = useState(false);
  const qrRef = useRef(null);

  const handleScan = async (result, error) => {
    if (!!result) {
      setData(result?.text);
      setShowModal(true);
      // qrRef.current.stop();

      const scannedUrl = result?.text;
      const url = `https://malicious-urls.p.rapidapi.com/check?url=${scannedUrl}`;
      const options = {
        method: "GET",
        headers: {
          "X-RapidAPI-Key":
            "4642effa23msh96f41098f5e9d02p10d222jsn007841d345d5",
          "X-RapidAPI-Host": "malicious-urls.p.rapidapi.com",
        },
      };

      try {
        const response = await fetch(url, options);
        const result = await response.json();
        console.log(result);
        console.log(result.malicious);
        setMessage(result.malicious === true ? "Malicious" : "Benign");
      } catch (error) {
        console.error(error);
      }
    }

    if (!!error) {
      console.info(error);
    }
  };

  const handleCloseModal = () => {
    setShowModal(false);
    router.reload();
  };

  return (
    <>
      <Head>
        <title>QR Scan</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col mt-[5rem] justify-center items-center">
        <div className="flex flex-col justify-center items-center">
          <h1 className="text-4xl font-bold mb-4">QR Scanner</h1>
          <div>
            <QrReader
              className="lg:h-[400px] lg:w-[400px] h-[300px] w-[300px]"
              onResult={handleScan}
              constraints={{ facingMode: "environment" }}
              style={{ width: "40%", height: "40%" }}
              ref={qrRef}
            />
          </div>
          <Link
            href={`/`}
            className=" bg-yellow-200 m-4 text-md rounded-md px-4 py-2 hover:underline"
          >
            Back to home..
          </Link>
          {showModal && (
            <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
              <div className="bg-white rounded-md p-4">
                <p className="text-xl font-bold mb-2">
                  Scanned data by Hanadi :
                </p>
                <p>{data}</p>
                <p className="text-xl font-bold mb-2">
                  Scanned URL Type : {message}
                </p>
                <button
                  className="bg-gray-200 text-gray-800 px-4 py-2 rounded-md mt-4 hover:bg-gray-300"
                  onClick={handleCloseModal}
                >
                  Close
                </button>
                {/* <button
                  className="bg-gray-200 text-gray-800 px-4 py-2 rounded-md mx-4 mt-4 hover:bg-gray-300"
                  onClick={handleOK}
                >
                  Ok
                </button> */}
              </div>
            </div>
          )}
        </div>
      </main>
    </>
  );
}
